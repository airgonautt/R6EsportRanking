@page "/teams"

@using Microsoft.EntityFrameworkCore
@using R6Ranking.Models
@using R6Ranking.Data
@inject IDbContextFactory<R6Ranking.Data.R6EsportsDbContext> DbFactory
@inject NavigationManager NavManager
@implements IAsyncDisposable
@rendermode InteractiveServer


<PageTitle>Teams</PageTitle>

<h1 style="color: var(--bs-white--1); text-align: center;">Teams</h1>

<div class="d-flex justify-content-end align-items-center mb-3">
    <button class="btn btn-sm btn-outline-secondary me-2" title="Sort Alphabetically" @onclick="SortByName">
        <i class="bi bi-sort-alpha-down"></i>
    </button>
    <button class="btn btn-sm btn-outline-secondary" title="Sort by Region ID" @onclick="SortByRegion">
        <i class="bi bi-globe"></i>
    </button>
</div>

<div class="container">
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 gx-3 gy-3">
        @foreach (var team in Teams)
        {
            <div class="col">
                <Card class="team-card" @onclick="() => NavigateToTeam(team.TeamName)">
                    <CardHeader style="padding: 14px; display: flex; align-items: center;">
                        <img src="@team.LogoUrl" alt="@team.TeamName Logo"
                        class="team-logo me-3" style="height: 70px; width: 60px; filter: drop-shadow(1px 1px 0px var(--bs-black--3));" />
                        <div>
                            <h2 style="color: var(--bs-white--1); font-size: 1.5rem; margin: 0; text-shadow:
                                    2px 2px 2px var(--bs-black--4)">
                                @team.TeamName
                            </h2>
                            <div style="display: flex; align-items: center; gap: 20px; margin-top: 1px;">
                                <h4 style="color: var(--bs-gold---1); text-shadow:
                                    3px 3px 0px var(--bs-black--2); font-size: 1.15rem; margin: 0;">
                                    @team.CurrentElo RP
                                </h4>
                                <div style="display: flex; align-self: end; gap: 2px; background-color: @team.Region.SocialUrl; padding: 2px 2px; border-radius: 10px;">
                                    <img src="/Images/Logos/region.png" alt="Region" style="height: 20px; width: 20px;" />
                                    <span style="color: var(--bs-black--4); font-size: 0.95rem;">@team.RegionID</span>
                                </div>
                            </div>
                        </div>
                    </CardHeader>
                    <AuthorizeView Policy="@UserPolicy.VIEW">
                        <Authorized>
                            <CardBody class="text-center" style="padding: 10px;">
                                <a href="@($"teams/details?teamid={team?.TeamID}")"
                                class="btn btn-sm btn-outline-primary">View Details</a>
                            </CardBody>
                        </Authorized>
                    </AuthorizeView>
                </Card>
            </div>
        }
    </div>
</div>

@code {

    R6EsportsDbContext context = default!;
    List<Team> Teams = new();

    protected override async Task OnInitializedAsync()
    {
        context = DbFactory.CreateDbContext();
        Teams = await context.Teams.Include(r => r.Region).ToListAsync();
    }

    private void SortByName()
    {
        Teams = Teams.OrderBy(t => t.TeamName).ToList();
        StateHasChanged();
    }

    private void SortByRegion()
    {
        Teams = Teams.OrderBy(t => t.RegionID).ToList();
        StateHasChanged();
    }

    private void NavigateToTeam(string teamName)
    {
        NavManager.NavigateTo($"/teams/{teamName}");
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}

<style>
    .team-card {
        background-color: var(--bs-gray---2);
        border: 3px solid var(--bs-black--3);
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
        cursor: pointer;
        transition: transform 0.2s ease, box-shadow 0.2s ease, border-color 0.2s ease;
    }

        .team-card:hover {
            border-color: var(--bs-gold---1);
            transform: translateY(-5px);
            box-shadow: 0 6px 18px rgba(0, 0, 0, 0.4);
        }

        .team-card:active {
            transform: translateY(0);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
        }

    .team-logo {
        object-fit: contain;
        border-radius: 5px;
    }

    .row-cols-1.row-cols-md-2.row-cols-lg-3.row-cols-xl-4 {
        justify-content: space-between;
    }
    h2 {
        font-size: 1.1rem;
        font-weight: bold;
        margin-bottom: 2px;
    }

    h4 {
        font-size: 0.95rem;
        font-weight: bold;
    }
    [title] {
        position: relative;
    }

        [title]::before {
            content: attr(title);
            position: absolute;
            background-color: var(--bs-black--2);
            color: var(--bs-white--1);
            padding: 5px 10px;
            border-radius: 5px;
            top: -35px;
            left: 50%;
            transform: translateX(-50%);
            white-space: nowrap;
            font-size: 0.7rem;
            opacity: 0;
            transition: opacity 0.2s ease;
            pointer-events: none;
        }

        [title]:hover::before {
            opacity: 1;
        }
</style>
