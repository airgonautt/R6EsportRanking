@page "/teams/{teamName}"

@using R6Ranking.Models
@using Microsoft.EntityFrameworkCore
@using R6Ranking.Data

@using R6Ranking.Components.Splashable
@inject IDbContextFactory<R6Ranking.Data.R6EsportsDbContext> DbFactory
@inject NavigationManager NavManager

<div class="main-layout container" style="background-color: rgba(64, 71, 79, 0.98);
    border: 8px solid; border-radius: 5px; 
    border-color: @(string.IsNullOrWhiteSpace(team?.PrimaryColor) ? "#fbac40" : team.PrimaryColor);">
    
    <!-- Header and Navigation -->
    <div class="d-flex justify-content-between align-items-center mb-4 fixed-header"
         style="background-color:@(string.IsNullOrWhiteSpace(team?.PrimaryColor) ? "#fbac40" : team.PrimaryColor); 
         border-bottom-left-radius: 15px; border-bottom-right-radius: 15px;">
        <button class="custom-btn" @onclick="NavigateToLowerEloTeam" title="Back">
            <i class="bi bi-caret-left fa-6x"></i>
        </button>

        <div class="team-name-container">
            <div class="team-logo-name">
                <img src="@team?.LogoUrl" alt="Team Logo" class="img-fluid me-3 team-logo" 
                     style="filter: drop-shadow(3px 3px 5px var(--bs-black--3))">
                <h2 class="team-name fw-bold text-white mb-1" 
                    style="filter: drop-shadow(3px 3px 2px var(--bs-black--3));">@team?.TeamName</h2>
            </div>
            <h4 class="text-warning mb-0" style="filter: drop-shadow(3px 3px 4px var(--bs-black--3))">
                @team?.CurrentElo RP
            </h4>
        </div>

        <button class="custom-btn" @onclick="NavigateToHigherEloTeam" title="Next">
            <i class="bi bi-caret-right fa-6x"></i>
        </button>
    </div>

    <!-- Elo History Section -->
    <div>
        @if (team != null)
        {
            <TeamGraph Team="@team" PrimaryColor="@(string.IsNullOrWhiteSpace(team?.PrimaryColor) ? "#fbac40" : team.PrimaryColor)" />
        }
    </div>

    <!-- Player Roster Section -->
    <div class="cards-container">
        @if (Players != null)
        {
            @foreach (var player in Players)
            {
                <div class="pack-grid-item">
                    <PlayerCard Player="@player" />
                </div>
            }
        }
        else
        {
            <p>Loading players...</p>
        }
    </div>

    <!-- Elo History Grid -->
    <div>
        @if (team != null)
        {
            <TeamGrid Team="@team" PrimaryColor="@(string.IsNullOrWhiteSpace(team?.PrimaryColor) ? "#fbac40" : team.PrimaryColor)" />
        }
    </div>
</div>

@code {

    [Parameter] public string teamName { get; set; } = default!;
    private Team? team;
    private List<TeamEloChange> EloHistory = new();
    private List<Player>? Players = new();

    private bool IsRosterLoaded = false;
    private bool IsHistoryLoaded = false;

    protected override async Task OnInitializedAsync()
    {
        var context = await DbFactory.CreateDbContextAsync();
        team = await context.Teams
        .Include(t => t.Players)
        .ThenInclude(p => p.OriginCountry)
        .FirstOrDefaultAsync(team=>team.TeamName == teamName);


        if (team != null)
        {
            EloHistory = await context.TeamEloChanges
                .Where(e => e.TeamID == team.TeamID)
                .OrderBy(e => e.Date)
                .ToListAsync(); 

            Players = team.Players.ToList();
        }        
    }

    private async Task NavigateToLowerEloTeam()
    {
        var context = await DbFactory.CreateDbContextAsync();
        var lowerTeam = await context.Teams
            .Where(t => t.CurrentElo < team!.CurrentElo)
            .OrderByDescending(t => t.CurrentElo)
            .FirstOrDefaultAsync();

        NavManager.NavigateTo($"/teams/{lowerTeam?.TeamName}", forceLoad: true);
    }
    private async Task NavigateToHigherEloTeam()
    {
        var context = await DbFactory.CreateDbContextAsync();
        var higherTeam = await context.Teams
            .Where(t => t.CurrentElo > team!.CurrentElo)
            .OrderBy(t => t.CurrentElo)
            .FirstOrDefaultAsync();

        NavManager.NavigateTo($"/teams/{higherTeam?.TeamName}", forceLoad: true);
    }
}

<style>
    .team-name-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        width: 550px;
    }

    .team-logo-name {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }
    .team-logo{
        max-height: 120px;
        width: auto;
    }

    .team-name {
        font-size: calc(18px + 1vw); 
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 350px; 
    }

</style>