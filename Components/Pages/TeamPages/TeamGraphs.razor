@page "/teams/graphs"

@using R6Ranking.Models
@using Microsoft.EntityFrameworkCore
@using R6Ranking.Data
@using R6Ranking.Components.Splashable
@inject IDbContextFactory<R6Ranking.Data.R6EsportsDbContext> DbFactory
@inject NavigationManager NavManager


<div style="background: rgba(0, 0, 0, 1); backdrop-filter: blur(5px); padding: 16px; color: white; border-radius: 8px">
    <h2 style="font-size: 1.8rem; margin: 24px 0 16px;">Elo History of Top 10 Teams</h2>
    <MudContainer Style="margin-bottom: 32px;">
        <MudChart ChartType="ChartType.Line" ChartSeries="@Series"
                  XAxisLabels="@XAxisLabels" Width="100%" Height="700px"
                  ChartOptions="@Options" ShowPoints="true" />
    </MudContainer>
</div>

@code {
    public ChartOptions Options = new ChartOptions { LineStrokeWidth = 2 };
    public List<ChartSeries> Series = new();
    public string[] XAxisLabels = Array.Empty<string>();

    protected override async Task OnInitializedAsync()
    {
        var context = await DbFactory.CreateDbContextAsync();

        // Fetch the top 10 teams by Elo
        var topTeams = await context.Teams
                                    .OrderByDescending(t => t.CurrentElo)
                                    .Take(5)
                                    .ToListAsync();

        var teamEloHistories = new Dictionary<string, List<TeamEloChange>>();

        foreach (var team in topTeams)
        {
            var eloHistory = await context.TeamEloChanges
                                          .Where(e => e.TeamID == team.TeamID)
                                          .OrderBy(e => e.Date)
                                          .ToListAsync();
            teamEloHistories[team.TeamName] = eloHistory;
        }

        PopulateChartData(teamEloHistories);
    }

    private void PopulateChartData(Dictionary<string, List<TeamEloChange>> teamEloHistories)
    {
        var allDates = teamEloHistories.Values.SelectMany(h => h.Select(e => e.Date))
                                              .Distinct()
                                              .OrderBy(d => d)
                                              .ToList();
        XAxisLabels = allDates.Select(d => d.ToShortDateString()).ToArray();

        var colors = new[] { "red", "blue", "green", "purple", "orange", "teal", "pink", "yellow", "gray", "brown" };

        Series = new List<ChartSeries>();

        int colorIndex = 0;
        foreach (var (teamName, history) in teamEloHistories)
        {
            var data = allDates.Select(date =>
                history.FirstOrDefault(e => e.Date == date)?.CurrentElo ?? 0).ToArray();

            Series.Add(new ChartSeries
                {
                    Name = teamName,
                    Data = history.Select(e => (double)e.CurrentElo).ToArray(),
                    
                });

            colorIndex++;
        }
    }
}
