@page "/teams/create"

@using Microsoft.EntityFrameworkCore
@using R6Ranking.Models
@inject IDbContextFactory<R6Ranking.Data.R6EsportsDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Team</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Team" OnValidSubmit="AddTeam" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />

            <div class="mb-3">
                <label for="teamname" class="form-label">TeamName:</label> 
                <InputText id="teamname" @bind-Value="Team.TeamName" class="form-control" /> 
                <ValidationMessage For="() => Team.TeamName" class="text-danger" /> 
            </div> 
            
            <div class="mb-3">
                <label for="logourl" class="form-label">LogoUrl:</label> 
                <InputText id="logourl" @bind-Value="Team.LogoUrl" class="form-control" /> 
                <ValidationMessage For="() => Team.LogoUrl" class="text-danger" /> 
            </div> 
            
            <div class="mb-3">
                <label for="regionid" class="form-label">Region:</label> 
                <InputSelect id="regionid" @bind-Value="@Team.RegionID" class="form-control"> 
                    <option value ="">Select a region</option>
                    @foreach (var region in Regions) 
                        {
                         <option value="@region.RegionID">@region.RegionName</option>
                        }  
                    </InputSelect>
                <ValidationMessage For="() => Team.RegionID" class="text-danger" /> 
            </div> 
            
            <div class="mb-3">
                <label for="currentelo" class="form-label">CurrentElo:</label> 
                <InputNumber id="currentelo" @bind-Value="Team.CurrentElo" class="form-control" /> 
                <ValidationMessage For="() => Team.CurrentElo" class="text-danger" /> 
            </div>             
                  
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/teams">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Team Team { get; set; } = new Team() { TeamName = "Default name"};

    private List<Region> Regions { get; set; } = new();

    protected override async Task OnInitializedAsync() {
        using var context = DbFactory.CreateDbContext();
        Regions = await context.Regions.ToListAsync();
    }

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddTeam()
    {
        using var context = DbFactory.CreateDbContext();
        context.Teams.Add(Team);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/teams");
    }
}
