@page "/operatorbans/create"
@using Microsoft.EntityFrameworkCore
@using R6Ranking.Models
@inject IDbContextFactory<R6Ranking.Data.R6EsportsDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>OperatorBan</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="OperatorBan" OnValidSubmit="AddOperatorBan" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="operatorname" class="form-label">OperatorName:</label> 
                <InputText id="operatorname" @bind-Value="OperatorBan.OperatorName" class="form-control" /> 
                <ValidationMessage For="() => OperatorBan.OperatorName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="operatorlogo" class="form-label">OperatorLogo:</label> 
                <InputText id="operatorlogo" @bind-Value="OperatorBan.OperatorLogo" class="form-control" /> 
                <ValidationMessage For="() => OperatorBan.OperatorLogo" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="operatorside" class="form-label">OperatorSide:</label> 
                <InputText id="operatorside" @bind-Value="OperatorBan.OperatorSide" class="form-control" /> 
                <ValidationMessage For="() => OperatorBan.OperatorSide" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/operatorbans">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private OperatorBan OperatorBan { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddOperatorBan()
    {
        using var context = DbFactory.CreateDbContext();
        context.OperatorBans.Add(OperatorBan);
        await context.SaveChangesAsync();
    }
}
