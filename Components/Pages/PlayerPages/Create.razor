@page "/players/create"

@using Microsoft.EntityFrameworkCore
@using R6Ranking.Models
@inject IDbContextFactory<R6Ranking.Data.R6EsportsDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Player</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Player" OnValidSubmit="AddPlayer" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />

            <div class="mb-3">
                <label for="playername" class="form-label">PlayerName:</label> 
                <InputText id="playername" @bind-Value="Player.PlayerName" class="form-control" /> 
                <ValidationMessage For="() => Player.PlayerName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="role" class="form-label">Role:</label> 
                <InputText id="role" @bind-Value="Player.Role" class="form-control" /> 
                <ValidationMessage For="() => Player.Role" class="text-danger" /> 
            </div>  

            <div class="mb-3">
                <label for="photourl" class="form-label">PhotoURL:</label> 
                <InputText id="photourl" @bind-Value="Player.PhotoURL" class="form-control" /> 
                <ValidationMessage For="() => Player.PhotoURL" class="text-danger" /> 
            </div> 
            <div class="mb-3">
                <label for="cardurl" class="form-label">CardURL:</label>
                <InputText id="photourl" @bind-Value="Player.PhotoURL" class="form-control" />
                <ValidationMessage For="() => Player.CardURL" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="teamid" class="form-label">Team:</label> 
                <InputSelect id="teamid" @bind-Value="@Player.TeamID" class="form-control">
                    <option value="">Select a team</option>
                    @foreach (var team in Teams)
                    {
                        <option value="@team.TeamID">@team.TeamName</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => Player.TeamID" class="text-danger" /> 
            </div> 

            <div class="mb-3">
                <label for="countryid" class="form-label">Country:</label>
                <InputSelect id="countryid" @bind-Value="@Player.CountryID" class="form-control">
                    <option value="">Select a country</option>
                    @foreach (var country in Countries)
                    {
                        <option country="@country.CountryID">@country.CountryName</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => Player.CountryID" class="text-danger" />
            </div>

            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/players">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Player Player { get; set; } = new Player(){PlayerName = "Default name"};

    private List<Team> Teams { get; set; } = new();
    private List<OriginCountry> Countries { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        Teams = await context.Teams.ToListAsync();
        Countries = await context.Countries.ToListAsync();
    }

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddPlayer()
    {
        using var context = DbFactory.CreateDbContext();
        context.Players.Add(Player);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/players");
    }
}
